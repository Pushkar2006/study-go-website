<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamnine.dao.RankingMapper">
  <resultMap id="BaseResultMap" type="com.teamnine.bean.Ranking">
    <id column="rid" jdbcType="INTEGER" property="rid" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="time" jdbcType="DECIMAL" property="time" />
    <result column="rate" jdbcType="INTEGER" property="rate" />
    <result column="postnum" jdbcType="INTEGER" property="postnum" />
    <result column="favoritenum" jdbcType="INTEGER" property="favoritenum" />
    <result column="follownum" jdbcType="INTEGER" property="follownum" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="sstime" jdbcType="INTEGER" property="sstime" />
    <result column="total" jdbcType="DECIMAL" property="total" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userid, username, time, rate, postnum, favoritenum, level, exp, sstime, total
  </sql>
  
  <insert id="insert" parameterType="com.teamnine.bean.User">
    insert into ranking (userid, username, time, rate, postnum, favoritenum, follownum, level, sstime, total)
    values (#{userid, jdbcType=INTEGER}, #{name, jdbcType=VARCHAR},
    '0.00', '0', '0', '0', '0', '0', '0', '0')
  </insert>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ranking
    where userid = #{userid, jdbcType=INTEGER}
  </delete>
  <update id="updatePostnumByPrimaryKey" parameterType="java.lang.Integer">
    update ranking
    set postnum = (select count(*) from article where userid=#{userid, jdbcType=INTEGER} and status=1)
    where userid = #{userid, jdbcType=INTEGER}
  </update>
  <update id="updateFavoritenumByPrimaryKey">
    update ranking
    set favoritenum = (select count(f.fid) from user u left join article a on u.userid=a.userid left join favorite f on f.fid=a.fid where u.userid=#{userid, jdbcType=INTEGER})
    where userid = #{userid, jdbcType=INTEGER}
  </update>
  <update id="updateFollownumByPrimaryKey" parameterType="java.lang.Integer">
    update ranking
    set follownum = (select count(*) from follow where beuserid=#{beuserid, jdbcType=INTEGER})
    where userid = #{beuserid, jdbcType=INTEGER}
  </update>
  <update id="updateLevelByPrimaryKey">
    update ranking
    set level = #{level, jdbcType=INTEGER}
    where userid = #{userid, jdbcType=INTEGER}
  </update>
  <update id="updateTimeByPrimaryKey">
    update ranking
    set time = #{time, jdbcType=DECIMAL}
    where userid = #{userid, jdbcType=INTEGER}
  </update>
  <update id="updateTotalByPrimaryKey">
    update ranking
    set total = #{total, jdbcType=DECIMAL}
    where userid = #{userid, jdbcType=INTEGER}
  </update>
  <update id="updateUsernameByPrimaryKey">
    update ranking
    set username = #{username, jdbcType=VARCHAR}
    where userid = #{userid, jdbcType=INTEGER}
  </update>
  <select id="selectByRankingAll" parameterType="com.teamnine.bean.Ranking" resultMap="BaseResultMap">
    select
    r.rid, r.userid, r.username, r.time, r.rate, r.postnum, r.favoritenum, r.follownum, r.level, r.sstime, r.total
    from ranking r
    order by total desc
  </select>
  <select id="selectByRankingTotal" parameterType="java.lang.Integer" resultType="java.lang.Double">
    select
    r.total
    from ranking r
    where r.userid = #{userid, jdbcType=INTEGER}
  </select>
</mapper>