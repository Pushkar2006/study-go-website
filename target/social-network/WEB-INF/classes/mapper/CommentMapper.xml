<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamnine.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.teamnine.bean.Comment">
    <id column="cid" jdbcType="INTEGER" property="cid" />
    <result column="pcontent" jdbcType="VARCHAR" property="pcontent" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="fid" jdbcType="INTEGER" property="fid" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cid, pcontent, userid, fid, time
  </sql>
  <sql id="Base_Column_List2">
    cid, pcontent, userid, fid, time,name
  </sql>
  
  <!-- Query the comment table info by post id (fid) (and query the name by userid)
       First, query all the user who participated in the comment, then query of the comment form by fid.
   -->
  <select id="selectByCommentFid" parameterType="com.teamnine.bean.Comment" resultMap="BaseResultMap">
    select 
    c.cid, c.pcontent, c.userid, c.fid, c.time,u.name
    from comment c,user u
    where u.userid = c.userid
    and fid=#{fid,jdbcType=INTEGER}
  </select>
  
  <!-- Query the fid info of the comment table by user id (userid) (deduplication) -->
  <select id="selectByCommentUserid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from comment
    where userid = #{userid,jdbcType=INTEGER}
    GROUP BY fid
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where cid = #{cid,jdbcType=INTEGER}
  </select>
  
  <!-- Delte the comment table by cid -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where cid = #{cid,jdbcType=INTEGER}
  </delete>
  
  <!-- Delete all comment information corresponding to the user (by userid) -->
  <delete id="deleteByUserid" parameterType="java.lang.Integer">
    delete from comment
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  
  <!-- Add the comment -->
  <insert id="insert" parameterType="com.teamnine.bean.Comment">
    insert into 
    comment (cid, pcontent, userid, fid, time)
    values (#{cid,jdbcType=INTEGER}, #{pcontent,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER},
      #{fid,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP})
  </insert>
  
  <insert id="insertSelective" parameterType="com.teamnine.bean.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="pcontent != null">
        pcontent,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="fid != null">
        fid,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="pcontent != null">
        #{pcontent,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="fid != null">
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.pcontent != null">
        pcontent = #{record.pcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.fid != null">
        fid = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set cid = #{record.cid,jdbcType=INTEGER},
      pcontent = #{record.pcontent,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=INTEGER},
      fid = #{record.fid,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.teamnine.bean.Comment">
    update comment
    <set>
      <if test="pcontent != null">
        pcontent = #{pcontent,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="fid != null">
        fid = #{fid,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where cid = #{cid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.teamnine.bean.Comment">
    update comment
    set pcontent = #{pcontent,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER},
      fid = #{fid,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP}
    where cid = #{cid,jdbcType=INTEGER}
  </update>
</mapper>